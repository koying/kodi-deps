diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7546020..d4c69c7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -119,10 +119,6 @@ endif ()
 project(freetype)
 
 
-if (WIN32 AND NOT MINGW AND BUILD_SHARED_LIBS)
-  message(FATAL_ERROR "Building shared libraries on Windows needs MinGW")
-endif ()
-
 # Disallow in-source builds
 if ("${PROJECT_BINARY_DIR}" STREQUAL "${PROJECT_SOURCE_DIR}")
   message(FATAL_ERROR
@@ -345,10 +341,6 @@ add_library(freetype
   ${PRIVATE_HEADERS}
   ${BASE_SRCS}
 )
-# Compiler definitions for building the library
-target_compile_definitions(freetype
-  PRIVATE FT2_BUILD_LIBRARY
-)
 
 
 
@@ -360,6 +352,10 @@ if (BUILD_SHARED_LIBS)
   )
 endif ()
 
+# Compiler definitions for building the library
+target_compile_definitions(freetype
+  PRIVATE FT2_BUILD_LIBRARY
+)
 
 if (BUILD_FRAMEWORK)
   set_property(SOURCE ${PUBLIC_CONFIG_HEADERS}
diff --git a/include/freetype/config/ftoption.h b/include/freetype/config/ftoption.h
index 1bf6e8f..3fccae6 100644
--- a/include/freetype/config/ftoption.h
+++ b/include/freetype/config/ftoption.h
@@ -312,6 +312,10 @@ FT_BEGIN_HEADER
 /* #define FT_EXPORT(x)      extern x */
 /* #define FT_EXPORT_DEF(x)  x */
 
+#ifdef WIN32
+#define FT_EXPORT(x) __declspec(dllexport) x
+#define FT_BASE(x) __declspec(dllexport) x
+#endif
 
   /*************************************************************************/
   /*                                                                       */
diff --git a/src/base/win32_compat.c b/src/base/win32_compat.c
index 981e07f..6249d87 100644
--- a/src/base/win32_compat.c
+++ b/src/base/win32_compat.c
@@ -15,6 +15,9 @@
 /*                                                                         */
 /***************************************************************************/
 
+#include <ft2build.h>
+#include FT_CONFIG_OPTIONS_H
+
 #include <stdio.h>
 #include <stdlib.h>
 
@@ -22,7 +25,8 @@
 #include <windows.h>
 
 #if defined(WIN32) || defined(_MSC_VER)
-wchar_t* ft_to_utf16(const char* str, size_t length)
+FT_EXPORT( wchar_t* ) 
+ft_to_utf16(const char* str, size_t length)
 {
   if (length == 0)
     length = strlen(str);
@@ -47,7 +51,8 @@ wchar_t* ft_to_utf16(const char* str, size_t length)
   return dirPath;
 }
 
-char* ft_to_utf8(const wchar_t* str, size_t length)
+FT_EXPORT( char* )
+ft_to_utf8(const wchar_t* str, size_t length)
 {
   if (length == 0)
     length = wcslen(str);
-- 
2.10.2.windows.1

