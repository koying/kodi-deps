diff --git a/CMakeLists.txt b/CMakeLists.txt
index a92331f..c536b2e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,6 +12,17 @@ configure_file(
   ${CMAKE_CURRENT_BINARY_DIR}/cdio/version.h
   @ONLY
 )
+if(MSVC)
+  SET(HAVE_WIN32_CDROM 1)
+  if(CMAKE_SYSTEM_NAME STREQUAL "WindowsStore")
+    SET(HAVE_WIN32_CDROM 0)
+  endif()
+  configure_file(
+    ${CMAKE_CURRENT_SOURCE_DIR}/MSVC/config.h.in
+    ${CMAKE_CURRENT_SOURCE_DIR}/MSVC/config.h
+    @ONLY
+  )
+endif(MSVC)
 
 add_library(libcdio
   ${CMAKE_CURRENT_BINARY_DIR}/cdio/version.h
@@ -107,8 +118,8 @@ target_include_directories(
   $<INSTALL_INTERFACE:include/cdio>
 )
 
-find_package(iconv REQUIRED)
-target_link_libraries(libcdio PRIVATE winmm.lib iconv::iconv)
+  find_package(iconv REQUIRED)
+  target_link_libraries(libcdio PRIVATE winmm.lib iconv::iconv)
 
 target_compile_definitions(libcdio
   PRIVATE
diff --git a/MSVC/config.h b/MSVC/config.h
index e5c0891..5a06eb0 100644
--- a/MSVC/config.h
+++ b/MSVC/config.h
@@ -92,13 +92,13 @@
 #define HAVE_MEMSET 1
 
 /* Define to 1 if you have the `snprintf' function. */
-#define HAVE_SNPRINTF 1
+#undef HAVE_SNPRINTF
 
 /* Define 1 if you have Solaris CD-ROM support */
 #undef HAVE_SOLARIS_CDROM
 
 /* Define to 1 if you have the <stdbool.h> header file. */
-#define HAVE_STDBOOL_H 1
+#undef HAVE_STDBOOL_H
 
 /* Define to 1 if you have the <stdint.h> header file. */
 #undef HAVE_STDINT_H
@@ -119,7 +119,7 @@
 #undef HAVE_SYS_CDIO_H
 
 /* Define to 1 if you have the <sys/stat.h> header file. */
-#define HAVE_SYS_STAT_H 1
+#undef HAVE_SYS_STAT_H
 
 /* Define to 1 if you have the <sys/types.h> header file. */
 #define HAVE_SYS_TYPES_H 1
@@ -140,13 +140,11 @@
 #undef HAVE_VCDINFO
 
 /* Define to 1 if you have the `vsnprintf' function. */
-#define HAVE_VSNPRINTF 1
+#undef HAVE_VSNPRINTF
 
 /* Define 1 if you have MinGW CD-ROM support */
 #define HAVE_WIN32_CDROM 1
 
-#define HAVE_STDARG_H 1
-
 /* Define as const if the declaration of iconv() needs const. */
 #undef ICONV_CONST 
 
@@ -188,5 +186,3 @@
    calls it, or to nothing if 'inline' is not supported under any name.  */
 #define inline
 
-#define HAVE_NTDDSCSI_H 1
-#define HAVE_NTDDCDRM_H 1
diff --git a/MSVC/config.h.in b/MSVC/config.h.in
new file mode 100644
index 0000000..aa67e38
--- /dev/null
+++ b/MSVC/config.h.in
@@ -0,0 +1,192 @@
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* compiler does lsbf in struct bitfields */
+#undef BITFIELD_LSBF
+
+/* Define 1 if you are compiling using cygwin */
+#undef CYGWIN
+
+/* what to put between the brackets for empty arrays */
+#define EMPTY_ARRAY_SIZE
+
+/* Define 1 if you have BSDI-type CD-ROM support */
+#undef HAVE_BSDI_CDROM
+
+/* Define to 1 if you have the `bzero' function. */
+#undef HAVE_BZERO
+
+/* Define this if you have libcddb installed */
+#undef HAVE_CDDB
+
+/* Define to 1 if you have the <CoreFoundation/CFBase.h> header file. */
+#undef HAVE_COREFOUNDATION_CFBASE_H
+
+/* Define 1 if you have Darwin OS X-type CD-ROM support */
+#undef HAVE_DARWIN_CDROM
+
+/* Define if time.h defines extern long timezone and int daylight vars. */
+#undef HAVE_DAYLIGHT
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#undef HAVE_DLFCN_H
+
+/* Define to 1 if you have the <dvd.h> header file. */
+#undef HAVE_DVD_H
+
+/* Define to 1 if you have the <errno.h> header file. */
+#define HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#undef HAVE_FCNTL_H
+
+/* Define 1 if you have FreeBSD CD-ROM support */
+#undef HAVE_FREEBSD_CDROM
+
+/* Define to 1 if you have the <glob.h> header file. */
+#undef HAVE_GLOB_H
+
+/* Define if you have the iconv() function. */
+#undef HAVE_ICONV
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <IOKit/IOKitLib.h> header file. */
+#undef HAVE_IOKIT_IOKITLIB_H
+
+/* Supports ISO _Pragma() macro */
+#undef HAVE_ISOC99_PRAGMA
+
+/* Define 1 if you want ISO-9660 Joliet extension support. You must have also
+   libiconv installed to get Joliet extension support. */
+#undef HAVE_JOLIET
+
+/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */
+#undef HAVE_LANGINFO_CODESET
+
+/* Define to 1 if you have the `nsl' library (-lnsl). */
+#undef HAVE_LIBNSL
+
+/* Define to 1 if you have the `socket' library (-lsocket). */
+#undef HAVE_LIBSOCKET
+
+/* Define 1 if you have Linux-type CD-ROM support */
+#undef HAVE_LINUX_CDROM
+
+/* Define to 1 if you have the <linux/cdrom.h> header file. */
+#undef HAVE_LINUX_CDROM_H
+
+/* Define 1 if timeout is in cdrom_generic_command struct */
+#undef HAVE_LINUX_CDROM_TIMEOUT
+
+/* Define to 1 if you have the <linux/version.h> header file. */
+#undef HAVE_LINUX_VERSION_H
+
+/* Define to 1 if you have the `memcpy' function. */
+#define HAVE_MEMCPY 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `memset' function. */
+#define HAVE_MEMSET 1
+
+/* Define to 1 if you have the `snprintf' function. */
+#define HAVE_SNPRINTF 1
+
+/* Define 1 if you have Solaris CD-ROM support */
+#undef HAVE_SOLARIS_CDROM
+
+/* Define to 1 if you have the <stdbool.h> header file. */
+#define HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#undef HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#define HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/cdio.h> header file. */
+#undef HAVE_SYS_CDIO_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define if struct tm has the tm_gmtoff member. */
+#undef HAVE_TM_GMTOFF
+
+/* Define if time.h defines extern extern char *tzname[2] variable */
+#undef HAVE_TZNAME
+
+/* Define to 1 if you have the `tzset' function. */
+#undef HAVE_TZSET
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#undef HAVE_UNISTD_H
+
+/* Define this if you have libvcdinfo installed */
+#undef HAVE_VCDINFO
+
+/* Define to 1 if you have the `vsnprintf' function. */
+#define HAVE_VSNPRINTF 1
+
+/* Define 1 if you have MinGW CD-ROM support */
+#define HAVE_WIN32_CDROM @HAVE_WIN32_CDROM@
+
+#define HAVE_STDARG_H 1
+
+/* Define as const if the declaration of iconv() needs const. */
+#undef ICONV_CONST 
+
+/* Define 1 if you are compiling using MinGW */
+#undef MINGW32
+
+/* Name of package */
+#define PACKAGE "libcdio"
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "libcdio"
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION 1
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Version number of package */
+#define VERSION "1"
+
+/* Define to 1 if your processor stores words with the most significant byte
+   first (like Motorola and SPARC, unlike Intel and VAX). */
+#undef WORDS_BIGENDIAN
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#undef const
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#define inline
+
+#define HAVE_NTDDSCSI_H 1
+#define HAVE_NTDDCDRM_H 1
diff --git a/include/cdio/cdio.h b/include/cdio/cdio.h
index 2f626a2..761a352 100644
--- a/include/cdio/cdio.h
+++ b/include/cdio/cdio.h
@@ -32,6 +32,11 @@
  */
 #define CDIO_API_VERSION 6
 
+#if defined(WIN32)
+#  include <malloc.h>
+#  include <string.h>
+#endif
+
 #ifdef CDIO_STATICLIB
 #  define CDIO_EXTERN
 #elif defined(WIN32)
diff --git a/lib/driver/MSWindows/win32.c b/lib/driver/MSWindows/win32.c
index d94d2a2..353c1db 100644
--- a/lib/driver/MSWindows/win32.c
+++ b/lib/driver/MSWindows/win32.c
@@ -39,7 +39,7 @@
 #include <mmc_private.h>
 #include <driver/cdio_private.h>
 
-#ifdef HAVE_WIN32_CDROM
+#if defined(HAVE_WIN32_CDROM) && HAVE_WIN32_CDROM
 
 #include <ctype.h>
 #include <stdio.h>
@@ -528,7 +528,6 @@ open_close_media_win32 (const char *psz_win32_drive, DWORD command_flags)
     ret = DRIVER_OP_ERROR;
 
   return ret;
-#endif
 }
 
 /*!
@@ -945,11 +944,12 @@ cdio_open_am_win32 (const char *psz_orig_source, const char *psz_access_mode)
 #endif /* HAVE_WIN32_CDROM */
 
 }
+#endif
 
 bool
 cdio_have_win32 (void)
 {
-#ifdef HAVE_WIN32_CDROM
+#if defined(HAVE_WIN32_CDROM) && HAVE_WIN32_CDROM
   return true;
 #else
   return false;
diff --git a/lib/driver/MSWindows/win32_ioctl.c b/lib/driver/MSWindows/win32_ioctl.c
index f0801ad..31db1d8 100644
--- a/lib/driver/MSWindows/win32_ioctl.c
+++ b/lib/driver/MSWindows/win32_ioctl.c
@@ -24,7 +24,7 @@
 # include "config.h"
 #endif
 
-#ifdef HAVE_WIN32_CDROM
+#if defined(HAVE_WIN32_CDROM) && HAVE_WIN32_CDROM
 
 # if defined (__MINGW64_VERSION_MAJOR)
 #  define _NTSRB_ /* Bad things happen if srb.h gets included */
diff --git a/lib/driver/device.c b/lib/driver/device.c
index f16a6ef..def08d9 100644
--- a/lib/driver/device.c
+++ b/lib/driver/device.c
@@ -108,7 +108,7 @@ CdIo_driver_t CdIo_all_drivers[] = {
    NULL,
    NULL
   },
-
+#if HAVE_WIN32_CDROM
   {DRIVER_WIN32,
    CDIO_SRC_IS_DEVICE_MASK|CDIO_SRC_IS_NATIVE_MASK|CDIO_SRC_IS_SCSI_MASK,
    "WIN32",
@@ -121,7 +121,7 @@ CdIo_driver_t CdIo_all_drivers[] = {
    &cdio_get_devices_win32,
    &close_tray_win32
   },
-
+#endif
   {DRIVER_CDRDAO,
    CDIO_SRC_IS_DISK_IMAGE_MASK,
    "CDRDAO",
diff --git a/lib/driver/image/bincue.c b/lib/driver/image/bincue.c
index 0e393d3..c3c3757 100644
--- a/lib/driver/image/bincue.c
+++ b/lib/driver/image/bincue.c
@@ -994,27 +994,27 @@ static inline void Win32Glob(const char* pattern, const char* szCurPath, char **
   HANDLE hFind;
   BOOL bFound;
 
-  SetCurrentDirectoryA(szCurPath);
+  SetCurrentDirectory(szCurPath);
 
-  hFind = FindFirstFileA(pattern, &ffd);
+  hFind = FindFirstFile(pattern, &ffd);
   bFound = (hFind != INVALID_HANDLE_VALUE);
   while (bFound) {
     cdio_add_device_list(drives, ffd.cFileName, num_files);
-    bFound = FindNextFileA(hFind, &ffd);
+    bFound = FindNextFile(hFind, &ffd);
   }
   if (hFind != INVALID_HANDLE_VALUE)
     FindClose(hFind);
 
-  hFind = FindFirstFileA("*", &ffd);
+  hFind = FindFirstFile("*", &ffd);
   bFound = (hFind != INVALID_HANDLE_VALUE);
   while (bFound) {
     if ( (ffd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) &&
          (strcmp(ffd.cFileName, ".") != 0) && (strcmp(ffd.cFileName, "..") != 0) ) {
-      GetFullPathNameA(ffd.cFileName, sizeof(szPath), szPath, NULL);
+      GetFullPathName(ffd.cFileName, sizeof(szPath), szPath, NULL);
       Win32Glob(pattern, szPath, drives, num_files);
-      SetCurrentDirectoryA(szCurPath);
+      SetCurrentDirectory(szCurPath);
     }
-    bFound = FindNextFileA(hFind, &ffd);
+    bFound = FindNextFile(hFind, &ffd);
   }
   if (hFind != INVALID_HANDLE_VALUE)
     FindClose(hFind);
@@ -1040,7 +1040,7 @@ cdio_get_devices_bincue (void)
   globfree(&globbuf);
 #elif defined(_WIN32)
   char szStartDir[MAX_PATH];
-  GetCurrentDirectoryA(sizeof(szStartDir), szStartDir);
+  GetCurrentDirectory(sizeof(szStartDir), szStartDir);
   Win32Glob("*.cue", szStartDir, &drives, &num_files);
 #else
   cdio_add_device_list(&drives, DEFAULT_CDIO_DEVICE, &num_files);
diff --git a/lib/driver/image/nrg.c b/lib/driver/image/nrg.c
index 06a4b42..a4249de 100644
--- a/lib/driver/image/nrg.c
+++ b/lib/driver/image/nrg.c
@@ -1138,27 +1138,27 @@ static inline void Win32Glob(const char* pattern, const char* szCurPath, char **
   HANDLE hFind;
   BOOL bFound;
 
-  SetCurrentDirectoryA(szCurPath);
+  SetCurrentDirectory(szCurPath);
 
-  hFind = FindFirstFileA(pattern, &ffd);
+  hFind = FindFirstFile(pattern, &ffd);
   bFound = (hFind != INVALID_HANDLE_VALUE);
   while (bFound) {
     cdio_add_device_list(drives, ffd.cFileName, num_files);
-    bFound = FindNextFileA(hFind, &ffd);
+    bFound = FindNextFile(hFind, &ffd);
   }
   if (hFind != INVALID_HANDLE_VALUE)
     FindClose(hFind);
 
-  hFind = FindFirstFileA("*", &ffd);
+  hFind = FindFirstFile("*", &ffd);
   bFound = (hFind != INVALID_HANDLE_VALUE);
   while (bFound) {
     if ( (ffd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) &&
          (strcmp(ffd.cFileName, ".") != 0) && (strcmp(ffd.cFileName, "..") != 0) ) {
-      GetFullPathNameA(ffd.cFileName, sizeof(szPath), szPath, NULL);
+      GetFullPathName(ffd.cFileName, sizeof(szPath), szPath, NULL);
       Win32Glob(pattern, szPath, drives, num_files);
-      SetCurrentDirectoryA(szCurPath);
+      SetCurrentDirectory(szCurPath);
     }
-    bFound = FindNextFileA(hFind, &ffd);
+    bFound = FindNextFile(hFind, &ffd);
   }
   if (hFind != INVALID_HANDLE_VALUE)
     FindClose(hFind);
@@ -1184,7 +1184,7 @@ cdio_get_devices_nrg (void)
   globfree(&globbuf);
 #elif defined(_WIN32)
   char szStartDir[MAX_PATH];
-  GetCurrentDirectoryA(sizeof(szStartDir), szStartDir);
+  GetCurrentDirectory(sizeof(szStartDir), szStartDir);
   Win32Glob("*.nrg", szStartDir, &drives, &num_files);
 #else
   cdio_add_device_list(&drives, DEFAULT_CDIO_DEVICE, &num_files);
-- 
2.10.2.windows.1

