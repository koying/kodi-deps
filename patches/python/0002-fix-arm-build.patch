diff --git a/cmake/Extensions.cmake b/cmake/Extensions.cmake
index 4662fea..18ae5a5 100644
--- a/cmake/Extensions.cmake
+++ b/cmake/Extensions.cmake
@@ -174,6 +174,7 @@ function(add_python_extension name)
         configure_file(
             ${PROJECT_SOURCE_DIR}/cmake/add_python_extension_CMakeLists.txt.in
             ${CMAKE_CURRENT_BINARY_DIR}/${target_name}-src/CMakeLists.txt
+            @ONLY
         )
         add_subdirectory(
             ${CMAKE_CURRENT_BINARY_DIR}/${target_name}-src
diff --git a/cmake/add_python_extension_CMakeLists.txt.in b/cmake/add_python_extension_CMakeLists.txt.in
index c2995ac..b3bec3e 100644
--- a/cmake/add_python_extension_CMakeLists.txt.in
+++ b/cmake/add_python_extension_CMakeLists.txt.in
@@ -1,11 +1,35 @@
-add_library(${target_name} SHARED ${absolute_sources})
-include_directories(${ADD_PYTHON_EXTENSION_INCLUDEDIRS})
+set(absolute_sources @absolute_sources@)
+if ("@target_name@" STREQUAL "extension_ctypes")
+  foreach(source ${absolute_sources})
+    get_filename_component(filename ${source} NAME)
+    if(filename STREQUAL "arm.asm")
+      find_program(ARM_ASM_COMPILER
+          NAMES armasm 
+          PATHS
+          "$ENV{VCINSTALLDIR}\\bin\\x86_arm"
+          "$ENV{VCINSTALLDIR}\\bin\\amd64_arm"
+      )
+      message(STATUS "ARM ASM Copiler: ${ARM_ASM_COMPILER}")
+      add_custom_command(
+          OUTPUT ${CMAKE_BINARY_DIR}/arm.obj
+          COMMAND "${ARM_ASM_COMPILER}" -o "${CMAKE_BINARY_DIR}/arm.obj" "${source}"
+      )
+      set_source_files_properties("${CMAKE_BINARY_DIR}/arm.obj" PROPERTIES 
+              EXTERNAL_OBJECT true
+              GENERATED true)
+      list(REMOVE_ITEM absolute_sources "${source}")
+      list(APPEND absolute_sources "@CMAKE_BINARY_DIR@/arm.obj")
+    endif()
+  endforeach()
+endif()
+add_library(@target_name@ SHARED ${absolute_sources})
+include_directories(@ADD_PYTHON_EXTENSION_INCLUDEDIRS@)
 
-target_link_libraries(${target_name} ${ADD_PYTHON_EXTENSION_LIBRARIES})
+target_link_libraries(@target_name@ @ADD_PYTHON_EXTENSION_LIBRARIES@)
 
 if(NOT ADD_PYTHON_EXTENSION_NO_INSTALL)
-  install(TARGETS ${target_name}
-          ARCHIVE DESTINATION ${ARCHIVEDIR}
-          LIBRARY DESTINATION ${EXTENSION_INSTALL_DIR}
-          RUNTIME DESTINATION ${EXTENSION_INSTALL_DIR})
+  install(TARGETS @target_name@
+          ARCHIVE DESTINATION @ARCHIVEDIR@
+          LIBRARY DESTINATION @EXTENSION_INSTALL_DIR@
+          RUNTIME DESTINATION @EXTENSION_INSTALL_DIR@)
 endif()
diff --git a/cmake/extensions/CMakeLists.txt b/cmake/extensions/CMakeLists.txt
index 1722ebf..67b4541 100644
--- a/cmake/extensions/CMakeLists.txt
+++ b/cmake/extensions/CMakeLists.txt
@@ -275,7 +275,10 @@ if(WIN32)
           DEFINITIONS X86_WIN32
         )
     else() # Visual Studio
-      if(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
+      if(CMAKE_GENERATOR MATCHES ".*ARM")
+          # arm.asm will be handled properly inside generated CmakeLists.txt by add_python_extension
+          set(_ctype_arch_impl arm.asm)
+      elseif(${CMAKE_SIZEOF_VOID_P} EQUAL 8)
           enable_language(ASM_MASM)
           set(_ctype_arch_impl win64.asm)
       else()
-- 
2.10.2.windows.1

